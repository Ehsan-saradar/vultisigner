// Code generated by ent, DO NOT EDIT.

package ecdsalocaldata

import (
	"vultisigner/ent/predicate"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldLTE(FieldID, id))
}

// NTildeI applies equality check predicate on the "n_tilde_i" field. It's identical to NTildeIEQ.
func NTildeI(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldEQ(FieldNTildeI, v))
}

// H1i applies equality check predicate on the "h1i" field. It's identical to H1iEQ.
func H1i(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldEQ(FieldH1i, v))
}

// H2i applies equality check predicate on the "h2i" field. It's identical to H2iEQ.
func H2i(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldEQ(FieldH2i, v))
}

// Alpha applies equality check predicate on the "alpha" field. It's identical to AlphaEQ.
func Alpha(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldEQ(FieldAlpha, v))
}

// Beta applies equality check predicate on the "beta" field. It's identical to BetaEQ.
func Beta(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldEQ(FieldBeta, v))
}

// P applies equality check predicate on the "p" field. It's identical to PEQ.
func P(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldEQ(FieldP, v))
}

// Q applies equality check predicate on the "q" field. It's identical to QEQ.
func Q(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldEQ(FieldQ, v))
}

// Xi applies equality check predicate on the "xi" field. It's identical to XiEQ.
func Xi(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldEQ(FieldXi, v))
}

// ShareID applies equality check predicate on the "share_id" field. It's identical to ShareIDEQ.
func ShareID(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldEQ(FieldShareID, v))
}

// NTildeIEQ applies the EQ predicate on the "n_tilde_i" field.
func NTildeIEQ(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldEQ(FieldNTildeI, v))
}

// NTildeINEQ applies the NEQ predicate on the "n_tilde_i" field.
func NTildeINEQ(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldNEQ(FieldNTildeI, v))
}

// NTildeIIn applies the In predicate on the "n_tilde_i" field.
func NTildeIIn(vs ...string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldIn(FieldNTildeI, vs...))
}

// NTildeINotIn applies the NotIn predicate on the "n_tilde_i" field.
func NTildeINotIn(vs ...string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldNotIn(FieldNTildeI, vs...))
}

// NTildeIGT applies the GT predicate on the "n_tilde_i" field.
func NTildeIGT(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldGT(FieldNTildeI, v))
}

// NTildeIGTE applies the GTE predicate on the "n_tilde_i" field.
func NTildeIGTE(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldGTE(FieldNTildeI, v))
}

// NTildeILT applies the LT predicate on the "n_tilde_i" field.
func NTildeILT(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldLT(FieldNTildeI, v))
}

// NTildeILTE applies the LTE predicate on the "n_tilde_i" field.
func NTildeILTE(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldLTE(FieldNTildeI, v))
}

// NTildeIContains applies the Contains predicate on the "n_tilde_i" field.
func NTildeIContains(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldContains(FieldNTildeI, v))
}

// NTildeIHasPrefix applies the HasPrefix predicate on the "n_tilde_i" field.
func NTildeIHasPrefix(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldHasPrefix(FieldNTildeI, v))
}

// NTildeIHasSuffix applies the HasSuffix predicate on the "n_tilde_i" field.
func NTildeIHasSuffix(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldHasSuffix(FieldNTildeI, v))
}

// NTildeIEqualFold applies the EqualFold predicate on the "n_tilde_i" field.
func NTildeIEqualFold(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldEqualFold(FieldNTildeI, v))
}

// NTildeIContainsFold applies the ContainsFold predicate on the "n_tilde_i" field.
func NTildeIContainsFold(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldContainsFold(FieldNTildeI, v))
}

// H1iEQ applies the EQ predicate on the "h1i" field.
func H1iEQ(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldEQ(FieldH1i, v))
}

// H1iNEQ applies the NEQ predicate on the "h1i" field.
func H1iNEQ(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldNEQ(FieldH1i, v))
}

// H1iIn applies the In predicate on the "h1i" field.
func H1iIn(vs ...string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldIn(FieldH1i, vs...))
}

// H1iNotIn applies the NotIn predicate on the "h1i" field.
func H1iNotIn(vs ...string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldNotIn(FieldH1i, vs...))
}

// H1iGT applies the GT predicate on the "h1i" field.
func H1iGT(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldGT(FieldH1i, v))
}

// H1iGTE applies the GTE predicate on the "h1i" field.
func H1iGTE(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldGTE(FieldH1i, v))
}

// H1iLT applies the LT predicate on the "h1i" field.
func H1iLT(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldLT(FieldH1i, v))
}

// H1iLTE applies the LTE predicate on the "h1i" field.
func H1iLTE(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldLTE(FieldH1i, v))
}

// H1iContains applies the Contains predicate on the "h1i" field.
func H1iContains(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldContains(FieldH1i, v))
}

// H1iHasPrefix applies the HasPrefix predicate on the "h1i" field.
func H1iHasPrefix(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldHasPrefix(FieldH1i, v))
}

// H1iHasSuffix applies the HasSuffix predicate on the "h1i" field.
func H1iHasSuffix(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldHasSuffix(FieldH1i, v))
}

// H1iEqualFold applies the EqualFold predicate on the "h1i" field.
func H1iEqualFold(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldEqualFold(FieldH1i, v))
}

// H1iContainsFold applies the ContainsFold predicate on the "h1i" field.
func H1iContainsFold(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldContainsFold(FieldH1i, v))
}

// H2iEQ applies the EQ predicate on the "h2i" field.
func H2iEQ(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldEQ(FieldH2i, v))
}

// H2iNEQ applies the NEQ predicate on the "h2i" field.
func H2iNEQ(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldNEQ(FieldH2i, v))
}

// H2iIn applies the In predicate on the "h2i" field.
func H2iIn(vs ...string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldIn(FieldH2i, vs...))
}

// H2iNotIn applies the NotIn predicate on the "h2i" field.
func H2iNotIn(vs ...string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldNotIn(FieldH2i, vs...))
}

// H2iGT applies the GT predicate on the "h2i" field.
func H2iGT(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldGT(FieldH2i, v))
}

// H2iGTE applies the GTE predicate on the "h2i" field.
func H2iGTE(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldGTE(FieldH2i, v))
}

// H2iLT applies the LT predicate on the "h2i" field.
func H2iLT(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldLT(FieldH2i, v))
}

// H2iLTE applies the LTE predicate on the "h2i" field.
func H2iLTE(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldLTE(FieldH2i, v))
}

// H2iContains applies the Contains predicate on the "h2i" field.
func H2iContains(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldContains(FieldH2i, v))
}

// H2iHasPrefix applies the HasPrefix predicate on the "h2i" field.
func H2iHasPrefix(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldHasPrefix(FieldH2i, v))
}

// H2iHasSuffix applies the HasSuffix predicate on the "h2i" field.
func H2iHasSuffix(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldHasSuffix(FieldH2i, v))
}

// H2iEqualFold applies the EqualFold predicate on the "h2i" field.
func H2iEqualFold(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldEqualFold(FieldH2i, v))
}

// H2iContainsFold applies the ContainsFold predicate on the "h2i" field.
func H2iContainsFold(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldContainsFold(FieldH2i, v))
}

// AlphaEQ applies the EQ predicate on the "alpha" field.
func AlphaEQ(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldEQ(FieldAlpha, v))
}

// AlphaNEQ applies the NEQ predicate on the "alpha" field.
func AlphaNEQ(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldNEQ(FieldAlpha, v))
}

// AlphaIn applies the In predicate on the "alpha" field.
func AlphaIn(vs ...string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldIn(FieldAlpha, vs...))
}

// AlphaNotIn applies the NotIn predicate on the "alpha" field.
func AlphaNotIn(vs ...string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldNotIn(FieldAlpha, vs...))
}

// AlphaGT applies the GT predicate on the "alpha" field.
func AlphaGT(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldGT(FieldAlpha, v))
}

// AlphaGTE applies the GTE predicate on the "alpha" field.
func AlphaGTE(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldGTE(FieldAlpha, v))
}

// AlphaLT applies the LT predicate on the "alpha" field.
func AlphaLT(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldLT(FieldAlpha, v))
}

// AlphaLTE applies the LTE predicate on the "alpha" field.
func AlphaLTE(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldLTE(FieldAlpha, v))
}

// AlphaContains applies the Contains predicate on the "alpha" field.
func AlphaContains(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldContains(FieldAlpha, v))
}

// AlphaHasPrefix applies the HasPrefix predicate on the "alpha" field.
func AlphaHasPrefix(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldHasPrefix(FieldAlpha, v))
}

// AlphaHasSuffix applies the HasSuffix predicate on the "alpha" field.
func AlphaHasSuffix(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldHasSuffix(FieldAlpha, v))
}

// AlphaEqualFold applies the EqualFold predicate on the "alpha" field.
func AlphaEqualFold(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldEqualFold(FieldAlpha, v))
}

// AlphaContainsFold applies the ContainsFold predicate on the "alpha" field.
func AlphaContainsFold(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldContainsFold(FieldAlpha, v))
}

// BetaEQ applies the EQ predicate on the "beta" field.
func BetaEQ(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldEQ(FieldBeta, v))
}

// BetaNEQ applies the NEQ predicate on the "beta" field.
func BetaNEQ(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldNEQ(FieldBeta, v))
}

// BetaIn applies the In predicate on the "beta" field.
func BetaIn(vs ...string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldIn(FieldBeta, vs...))
}

// BetaNotIn applies the NotIn predicate on the "beta" field.
func BetaNotIn(vs ...string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldNotIn(FieldBeta, vs...))
}

// BetaGT applies the GT predicate on the "beta" field.
func BetaGT(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldGT(FieldBeta, v))
}

// BetaGTE applies the GTE predicate on the "beta" field.
func BetaGTE(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldGTE(FieldBeta, v))
}

// BetaLT applies the LT predicate on the "beta" field.
func BetaLT(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldLT(FieldBeta, v))
}

// BetaLTE applies the LTE predicate on the "beta" field.
func BetaLTE(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldLTE(FieldBeta, v))
}

// BetaContains applies the Contains predicate on the "beta" field.
func BetaContains(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldContains(FieldBeta, v))
}

// BetaHasPrefix applies the HasPrefix predicate on the "beta" field.
func BetaHasPrefix(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldHasPrefix(FieldBeta, v))
}

// BetaHasSuffix applies the HasSuffix predicate on the "beta" field.
func BetaHasSuffix(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldHasSuffix(FieldBeta, v))
}

// BetaEqualFold applies the EqualFold predicate on the "beta" field.
func BetaEqualFold(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldEqualFold(FieldBeta, v))
}

// BetaContainsFold applies the ContainsFold predicate on the "beta" field.
func BetaContainsFold(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldContainsFold(FieldBeta, v))
}

// PEQ applies the EQ predicate on the "p" field.
func PEQ(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldEQ(FieldP, v))
}

// PNEQ applies the NEQ predicate on the "p" field.
func PNEQ(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldNEQ(FieldP, v))
}

// PIn applies the In predicate on the "p" field.
func PIn(vs ...string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldIn(FieldP, vs...))
}

// PNotIn applies the NotIn predicate on the "p" field.
func PNotIn(vs ...string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldNotIn(FieldP, vs...))
}

// PGT applies the GT predicate on the "p" field.
func PGT(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldGT(FieldP, v))
}

// PGTE applies the GTE predicate on the "p" field.
func PGTE(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldGTE(FieldP, v))
}

// PLT applies the LT predicate on the "p" field.
func PLT(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldLT(FieldP, v))
}

// PLTE applies the LTE predicate on the "p" field.
func PLTE(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldLTE(FieldP, v))
}

// PContains applies the Contains predicate on the "p" field.
func PContains(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldContains(FieldP, v))
}

// PHasPrefix applies the HasPrefix predicate on the "p" field.
func PHasPrefix(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldHasPrefix(FieldP, v))
}

// PHasSuffix applies the HasSuffix predicate on the "p" field.
func PHasSuffix(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldHasSuffix(FieldP, v))
}

// PEqualFold applies the EqualFold predicate on the "p" field.
func PEqualFold(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldEqualFold(FieldP, v))
}

// PContainsFold applies the ContainsFold predicate on the "p" field.
func PContainsFold(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldContainsFold(FieldP, v))
}

// QEQ applies the EQ predicate on the "q" field.
func QEQ(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldEQ(FieldQ, v))
}

// QNEQ applies the NEQ predicate on the "q" field.
func QNEQ(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldNEQ(FieldQ, v))
}

// QIn applies the In predicate on the "q" field.
func QIn(vs ...string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldIn(FieldQ, vs...))
}

// QNotIn applies the NotIn predicate on the "q" field.
func QNotIn(vs ...string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldNotIn(FieldQ, vs...))
}

// QGT applies the GT predicate on the "q" field.
func QGT(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldGT(FieldQ, v))
}

// QGTE applies the GTE predicate on the "q" field.
func QGTE(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldGTE(FieldQ, v))
}

// QLT applies the LT predicate on the "q" field.
func QLT(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldLT(FieldQ, v))
}

// QLTE applies the LTE predicate on the "q" field.
func QLTE(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldLTE(FieldQ, v))
}

// QContains applies the Contains predicate on the "q" field.
func QContains(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldContains(FieldQ, v))
}

// QHasPrefix applies the HasPrefix predicate on the "q" field.
func QHasPrefix(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldHasPrefix(FieldQ, v))
}

// QHasSuffix applies the HasSuffix predicate on the "q" field.
func QHasSuffix(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldHasSuffix(FieldQ, v))
}

// QEqualFold applies the EqualFold predicate on the "q" field.
func QEqualFold(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldEqualFold(FieldQ, v))
}

// QContainsFold applies the ContainsFold predicate on the "q" field.
func QContainsFold(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldContainsFold(FieldQ, v))
}

// XiEQ applies the EQ predicate on the "xi" field.
func XiEQ(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldEQ(FieldXi, v))
}

// XiNEQ applies the NEQ predicate on the "xi" field.
func XiNEQ(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldNEQ(FieldXi, v))
}

// XiIn applies the In predicate on the "xi" field.
func XiIn(vs ...string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldIn(FieldXi, vs...))
}

// XiNotIn applies the NotIn predicate on the "xi" field.
func XiNotIn(vs ...string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldNotIn(FieldXi, vs...))
}

// XiGT applies the GT predicate on the "xi" field.
func XiGT(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldGT(FieldXi, v))
}

// XiGTE applies the GTE predicate on the "xi" field.
func XiGTE(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldGTE(FieldXi, v))
}

// XiLT applies the LT predicate on the "xi" field.
func XiLT(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldLT(FieldXi, v))
}

// XiLTE applies the LTE predicate on the "xi" field.
func XiLTE(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldLTE(FieldXi, v))
}

// XiContains applies the Contains predicate on the "xi" field.
func XiContains(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldContains(FieldXi, v))
}

// XiHasPrefix applies the HasPrefix predicate on the "xi" field.
func XiHasPrefix(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldHasPrefix(FieldXi, v))
}

// XiHasSuffix applies the HasSuffix predicate on the "xi" field.
func XiHasSuffix(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldHasSuffix(FieldXi, v))
}

// XiEqualFold applies the EqualFold predicate on the "xi" field.
func XiEqualFold(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldEqualFold(FieldXi, v))
}

// XiContainsFold applies the ContainsFold predicate on the "xi" field.
func XiContainsFold(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldContainsFold(FieldXi, v))
}

// ShareIDEQ applies the EQ predicate on the "share_id" field.
func ShareIDEQ(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldEQ(FieldShareID, v))
}

// ShareIDNEQ applies the NEQ predicate on the "share_id" field.
func ShareIDNEQ(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldNEQ(FieldShareID, v))
}

// ShareIDIn applies the In predicate on the "share_id" field.
func ShareIDIn(vs ...string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldIn(FieldShareID, vs...))
}

// ShareIDNotIn applies the NotIn predicate on the "share_id" field.
func ShareIDNotIn(vs ...string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldNotIn(FieldShareID, vs...))
}

// ShareIDGT applies the GT predicate on the "share_id" field.
func ShareIDGT(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldGT(FieldShareID, v))
}

// ShareIDGTE applies the GTE predicate on the "share_id" field.
func ShareIDGTE(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldGTE(FieldShareID, v))
}

// ShareIDLT applies the LT predicate on the "share_id" field.
func ShareIDLT(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldLT(FieldShareID, v))
}

// ShareIDLTE applies the LTE predicate on the "share_id" field.
func ShareIDLTE(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldLTE(FieldShareID, v))
}

// ShareIDContains applies the Contains predicate on the "share_id" field.
func ShareIDContains(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldContains(FieldShareID, v))
}

// ShareIDHasPrefix applies the HasPrefix predicate on the "share_id" field.
func ShareIDHasPrefix(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldHasPrefix(FieldShareID, v))
}

// ShareIDHasSuffix applies the HasSuffix predicate on the "share_id" field.
func ShareIDHasSuffix(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldHasSuffix(FieldShareID, v))
}

// ShareIDEqualFold applies the EqualFold predicate on the "share_id" field.
func ShareIDEqualFold(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldEqualFold(FieldShareID, v))
}

// ShareIDContainsFold applies the ContainsFold predicate on the "share_id" field.
func ShareIDContainsFold(v string) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.FieldContainsFold(FieldShareID, v))
}

// HasVault applies the HasEdge predicate on the "vault" edge.
func HasVault() predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2O, false, VaultTable, VaultColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasVaultWith applies the HasEdge predicate on the "vault" edge with a given conditions (other predicates).
func HasVaultWith(preds ...predicate.Vault) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(func(s *sql.Selector) {
		step := newVaultStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.EcdsaLocalData) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.EcdsaLocalData) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.EcdsaLocalData) predicate.EcdsaLocalData {
	return predicate.EcdsaLocalData(sql.NotPredicates(p))
}
