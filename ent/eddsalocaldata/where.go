// Code generated by ent, DO NOT EDIT.

package eddsalocaldata

import (
	"vultisigner/ent/predicate"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldLTE(FieldID, id))
}

// Xi applies equality check predicate on the "xi" field. It's identical to XiEQ.
func Xi(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldEQ(FieldXi, v))
}

// ShareID applies equality check predicate on the "share_id" field. It's identical to ShareIDEQ.
func ShareID(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldEQ(FieldShareID, v))
}

// Ks applies equality check predicate on the "ks" field. It's identical to KsEQ.
func Ks(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldEQ(FieldKs, v))
}

// BigXj applies equality check predicate on the "big_xj" field. It's identical to BigXjEQ.
func BigXj(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldEQ(FieldBigXj, v))
}

// EddsaPub applies equality check predicate on the "eddsa_pub" field. It's identical to EddsaPubEQ.
func EddsaPub(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldEQ(FieldEddsaPub, v))
}

// XiEQ applies the EQ predicate on the "xi" field.
func XiEQ(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldEQ(FieldXi, v))
}

// XiNEQ applies the NEQ predicate on the "xi" field.
func XiNEQ(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldNEQ(FieldXi, v))
}

// XiIn applies the In predicate on the "xi" field.
func XiIn(vs ...string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldIn(FieldXi, vs...))
}

// XiNotIn applies the NotIn predicate on the "xi" field.
func XiNotIn(vs ...string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldNotIn(FieldXi, vs...))
}

// XiGT applies the GT predicate on the "xi" field.
func XiGT(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldGT(FieldXi, v))
}

// XiGTE applies the GTE predicate on the "xi" field.
func XiGTE(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldGTE(FieldXi, v))
}

// XiLT applies the LT predicate on the "xi" field.
func XiLT(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldLT(FieldXi, v))
}

// XiLTE applies the LTE predicate on the "xi" field.
func XiLTE(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldLTE(FieldXi, v))
}

// XiContains applies the Contains predicate on the "xi" field.
func XiContains(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldContains(FieldXi, v))
}

// XiHasPrefix applies the HasPrefix predicate on the "xi" field.
func XiHasPrefix(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldHasPrefix(FieldXi, v))
}

// XiHasSuffix applies the HasSuffix predicate on the "xi" field.
func XiHasSuffix(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldHasSuffix(FieldXi, v))
}

// XiIsNil applies the IsNil predicate on the "xi" field.
func XiIsNil() predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldIsNull(FieldXi))
}

// XiNotNil applies the NotNil predicate on the "xi" field.
func XiNotNil() predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldNotNull(FieldXi))
}

// XiEqualFold applies the EqualFold predicate on the "xi" field.
func XiEqualFold(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldEqualFold(FieldXi, v))
}

// XiContainsFold applies the ContainsFold predicate on the "xi" field.
func XiContainsFold(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldContainsFold(FieldXi, v))
}

// ShareIDEQ applies the EQ predicate on the "share_id" field.
func ShareIDEQ(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldEQ(FieldShareID, v))
}

// ShareIDNEQ applies the NEQ predicate on the "share_id" field.
func ShareIDNEQ(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldNEQ(FieldShareID, v))
}

// ShareIDIn applies the In predicate on the "share_id" field.
func ShareIDIn(vs ...string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldIn(FieldShareID, vs...))
}

// ShareIDNotIn applies the NotIn predicate on the "share_id" field.
func ShareIDNotIn(vs ...string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldNotIn(FieldShareID, vs...))
}

// ShareIDGT applies the GT predicate on the "share_id" field.
func ShareIDGT(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldGT(FieldShareID, v))
}

// ShareIDGTE applies the GTE predicate on the "share_id" field.
func ShareIDGTE(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldGTE(FieldShareID, v))
}

// ShareIDLT applies the LT predicate on the "share_id" field.
func ShareIDLT(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldLT(FieldShareID, v))
}

// ShareIDLTE applies the LTE predicate on the "share_id" field.
func ShareIDLTE(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldLTE(FieldShareID, v))
}

// ShareIDContains applies the Contains predicate on the "share_id" field.
func ShareIDContains(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldContains(FieldShareID, v))
}

// ShareIDHasPrefix applies the HasPrefix predicate on the "share_id" field.
func ShareIDHasPrefix(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldHasPrefix(FieldShareID, v))
}

// ShareIDHasSuffix applies the HasSuffix predicate on the "share_id" field.
func ShareIDHasSuffix(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldHasSuffix(FieldShareID, v))
}

// ShareIDIsNil applies the IsNil predicate on the "share_id" field.
func ShareIDIsNil() predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldIsNull(FieldShareID))
}

// ShareIDNotNil applies the NotNil predicate on the "share_id" field.
func ShareIDNotNil() predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldNotNull(FieldShareID))
}

// ShareIDEqualFold applies the EqualFold predicate on the "share_id" field.
func ShareIDEqualFold(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldEqualFold(FieldShareID, v))
}

// ShareIDContainsFold applies the ContainsFold predicate on the "share_id" field.
func ShareIDContainsFold(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldContainsFold(FieldShareID, v))
}

// KsEQ applies the EQ predicate on the "ks" field.
func KsEQ(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldEQ(FieldKs, v))
}

// KsNEQ applies the NEQ predicate on the "ks" field.
func KsNEQ(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldNEQ(FieldKs, v))
}

// KsIn applies the In predicate on the "ks" field.
func KsIn(vs ...string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldIn(FieldKs, vs...))
}

// KsNotIn applies the NotIn predicate on the "ks" field.
func KsNotIn(vs ...string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldNotIn(FieldKs, vs...))
}

// KsGT applies the GT predicate on the "ks" field.
func KsGT(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldGT(FieldKs, v))
}

// KsGTE applies the GTE predicate on the "ks" field.
func KsGTE(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldGTE(FieldKs, v))
}

// KsLT applies the LT predicate on the "ks" field.
func KsLT(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldLT(FieldKs, v))
}

// KsLTE applies the LTE predicate on the "ks" field.
func KsLTE(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldLTE(FieldKs, v))
}

// KsContains applies the Contains predicate on the "ks" field.
func KsContains(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldContains(FieldKs, v))
}

// KsHasPrefix applies the HasPrefix predicate on the "ks" field.
func KsHasPrefix(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldHasPrefix(FieldKs, v))
}

// KsHasSuffix applies the HasSuffix predicate on the "ks" field.
func KsHasSuffix(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldHasSuffix(FieldKs, v))
}

// KsIsNil applies the IsNil predicate on the "ks" field.
func KsIsNil() predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldIsNull(FieldKs))
}

// KsNotNil applies the NotNil predicate on the "ks" field.
func KsNotNil() predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldNotNull(FieldKs))
}

// KsEqualFold applies the EqualFold predicate on the "ks" field.
func KsEqualFold(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldEqualFold(FieldKs, v))
}

// KsContainsFold applies the ContainsFold predicate on the "ks" field.
func KsContainsFold(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldContainsFold(FieldKs, v))
}

// BigXjEQ applies the EQ predicate on the "big_xj" field.
func BigXjEQ(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldEQ(FieldBigXj, v))
}

// BigXjNEQ applies the NEQ predicate on the "big_xj" field.
func BigXjNEQ(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldNEQ(FieldBigXj, v))
}

// BigXjIn applies the In predicate on the "big_xj" field.
func BigXjIn(vs ...string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldIn(FieldBigXj, vs...))
}

// BigXjNotIn applies the NotIn predicate on the "big_xj" field.
func BigXjNotIn(vs ...string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldNotIn(FieldBigXj, vs...))
}

// BigXjGT applies the GT predicate on the "big_xj" field.
func BigXjGT(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldGT(FieldBigXj, v))
}

// BigXjGTE applies the GTE predicate on the "big_xj" field.
func BigXjGTE(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldGTE(FieldBigXj, v))
}

// BigXjLT applies the LT predicate on the "big_xj" field.
func BigXjLT(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldLT(FieldBigXj, v))
}

// BigXjLTE applies the LTE predicate on the "big_xj" field.
func BigXjLTE(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldLTE(FieldBigXj, v))
}

// BigXjContains applies the Contains predicate on the "big_xj" field.
func BigXjContains(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldContains(FieldBigXj, v))
}

// BigXjHasPrefix applies the HasPrefix predicate on the "big_xj" field.
func BigXjHasPrefix(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldHasPrefix(FieldBigXj, v))
}

// BigXjHasSuffix applies the HasSuffix predicate on the "big_xj" field.
func BigXjHasSuffix(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldHasSuffix(FieldBigXj, v))
}

// BigXjIsNil applies the IsNil predicate on the "big_xj" field.
func BigXjIsNil() predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldIsNull(FieldBigXj))
}

// BigXjNotNil applies the NotNil predicate on the "big_xj" field.
func BigXjNotNil() predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldNotNull(FieldBigXj))
}

// BigXjEqualFold applies the EqualFold predicate on the "big_xj" field.
func BigXjEqualFold(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldEqualFold(FieldBigXj, v))
}

// BigXjContainsFold applies the ContainsFold predicate on the "big_xj" field.
func BigXjContainsFold(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldContainsFold(FieldBigXj, v))
}

// EddsaPubEQ applies the EQ predicate on the "eddsa_pub" field.
func EddsaPubEQ(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldEQ(FieldEddsaPub, v))
}

// EddsaPubNEQ applies the NEQ predicate on the "eddsa_pub" field.
func EddsaPubNEQ(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldNEQ(FieldEddsaPub, v))
}

// EddsaPubIn applies the In predicate on the "eddsa_pub" field.
func EddsaPubIn(vs ...string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldIn(FieldEddsaPub, vs...))
}

// EddsaPubNotIn applies the NotIn predicate on the "eddsa_pub" field.
func EddsaPubNotIn(vs ...string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldNotIn(FieldEddsaPub, vs...))
}

// EddsaPubGT applies the GT predicate on the "eddsa_pub" field.
func EddsaPubGT(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldGT(FieldEddsaPub, v))
}

// EddsaPubGTE applies the GTE predicate on the "eddsa_pub" field.
func EddsaPubGTE(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldGTE(FieldEddsaPub, v))
}

// EddsaPubLT applies the LT predicate on the "eddsa_pub" field.
func EddsaPubLT(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldLT(FieldEddsaPub, v))
}

// EddsaPubLTE applies the LTE predicate on the "eddsa_pub" field.
func EddsaPubLTE(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldLTE(FieldEddsaPub, v))
}

// EddsaPubContains applies the Contains predicate on the "eddsa_pub" field.
func EddsaPubContains(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldContains(FieldEddsaPub, v))
}

// EddsaPubHasPrefix applies the HasPrefix predicate on the "eddsa_pub" field.
func EddsaPubHasPrefix(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldHasPrefix(FieldEddsaPub, v))
}

// EddsaPubHasSuffix applies the HasSuffix predicate on the "eddsa_pub" field.
func EddsaPubHasSuffix(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldHasSuffix(FieldEddsaPub, v))
}

// EddsaPubIsNil applies the IsNil predicate on the "eddsa_pub" field.
func EddsaPubIsNil() predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldIsNull(FieldEddsaPub))
}

// EddsaPubNotNil applies the NotNil predicate on the "eddsa_pub" field.
func EddsaPubNotNil() predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldNotNull(FieldEddsaPub))
}

// EddsaPubEqualFold applies the EqualFold predicate on the "eddsa_pub" field.
func EddsaPubEqualFold(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldEqualFold(FieldEddsaPub, v))
}

// EddsaPubContainsFold applies the ContainsFold predicate on the "eddsa_pub" field.
func EddsaPubContainsFold(v string) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.FieldContainsFold(FieldEddsaPub, v))
}

// HasVault applies the HasEdge predicate on the "vault" edge.
func HasVault() predicate.EddsaLocalData {
	return predicate.EddsaLocalData(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2O, false, VaultTable, VaultColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasVaultWith applies the HasEdge predicate on the "vault" edge with a given conditions (other predicates).
func HasVaultWith(preds ...predicate.Vault) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(func(s *sql.Selector) {
		step := newVaultStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.EddsaLocalData) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.EddsaLocalData) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.EddsaLocalData) predicate.EddsaLocalData {
	return predicate.EddsaLocalData(sql.NotPredicates(p))
}
