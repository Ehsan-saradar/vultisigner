// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// EcdsaPubsColumns holds the columns for the "ecdsa_pubs" table.
	EcdsaPubsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "curve", Type: field.TypeString},
		{Name: "coords", Type: field.TypeJSON},
		{Name: "ecdsa_pub_vault", Type: field.TypeInt, Nullable: true},
	}
	// EcdsaPubsTable holds the schema information for the "ecdsa_pubs" table.
	EcdsaPubsTable = &schema.Table{
		Name:       "ecdsa_pubs",
		Columns:    EcdsaPubsColumns,
		PrimaryKey: []*schema.Column{EcdsaPubsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ecdsa_pubs_vaults_vault",
				Columns:    []*schema.Column{EcdsaPubsColumns[3]},
				RefColumns: []*schema.Column{VaultsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// EcdsaLocalDataColumns holds the columns for the "ecdsa_local_data" table.
	EcdsaLocalDataColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "n_tilde_i", Type: field.TypeString},
		{Name: "h1i", Type: field.TypeString},
		{Name: "h2i", Type: field.TypeString},
		{Name: "alpha", Type: field.TypeString},
		{Name: "beta", Type: field.TypeString},
		{Name: "p", Type: field.TypeString},
		{Name: "q", Type: field.TypeString},
		{Name: "xi", Type: field.TypeString},
		{Name: "share_id", Type: field.TypeString},
		{Name: "ks", Type: field.TypeJSON},
		{Name: "n_tilde_j", Type: field.TypeJSON},
		{Name: "h1j", Type: field.TypeJSON},
		{Name: "h2j", Type: field.TypeJSON},
		{Name: "big_xj", Type: field.TypeJSON},
		{Name: "paillier_pks", Type: field.TypeJSON},
	}
	// EcdsaLocalDataTable holds the schema information for the "ecdsa_local_data" table.
	EcdsaLocalDataTable = &schema.Table{
		Name:       "ecdsa_local_data",
		Columns:    EcdsaLocalDataColumns,
		PrimaryKey: []*schema.Column{EcdsaLocalDataColumns[0]},
	}
	// EddsaLocalDataColumns holds the columns for the "eddsa_local_data" table.
	EddsaLocalDataColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "xi", Type: field.TypeString, Nullable: true},
		{Name: "share_id", Type: field.TypeString, Nullable: true},
		{Name: "ks", Type: field.TypeString, Nullable: true},
		{Name: "big_xj", Type: field.TypeString, Nullable: true},
		{Name: "eddsa_pub", Type: field.TypeString, Nullable: true},
	}
	// EddsaLocalDataTable holds the schema information for the "eddsa_local_data" table.
	EddsaLocalDataTable = &schema.Table{
		Name:       "eddsa_local_data",
		Columns:    EddsaLocalDataColumns,
		PrimaryKey: []*schema.Column{EddsaLocalDataColumns[0]},
	}
	// PaillierSksColumns holds the columns for the "paillier_sks" table.
	PaillierSksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "n", Type: field.TypeString},
		{Name: "lambda_n", Type: field.TypeString},
		{Name: "phi_n", Type: field.TypeString},
		{Name: "p", Type: field.TypeString},
		{Name: "q", Type: field.TypeString},
	}
	// PaillierSksTable holds the schema information for the "paillier_sks" table.
	PaillierSksTable = &schema.Table{
		Name:       "paillier_sks",
		Columns:    PaillierSksColumns,
		PrimaryKey: []*schema.Column{PaillierSksColumns[0]},
	}
	// VaultsColumns holds the columns for the "vaults" table.
	VaultsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "pub_key", Type: field.TypeString, Nullable: true},
		{Name: "keygen_committee_keys", Type: field.TypeJSON, Nullable: true},
		{Name: "local_party_key", Type: field.TypeString},
		{Name: "chain_code_hex", Type: field.TypeString},
		{Name: "reshare_prefix", Type: field.TypeString, Nullable: true},
		{Name: "ecdsa_local_data_vault", Type: field.TypeInt, Unique: true, Nullable: true},
		{Name: "eddsa_local_data_vault", Type: field.TypeInt, Unique: true, Nullable: true},
		{Name: "paillier_sk_vault", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// VaultsTable holds the schema information for the "vaults" table.
	VaultsTable = &schema.Table{
		Name:       "vaults",
		Columns:    VaultsColumns,
		PrimaryKey: []*schema.Column{VaultsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "vaults_ecdsa_local_data_vault",
				Columns:    []*schema.Column{VaultsColumns[7]},
				RefColumns: []*schema.Column{EcdsaLocalDataColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "vaults_eddsa_local_data_vault",
				Columns:    []*schema.Column{VaultsColumns[8]},
				RefColumns: []*schema.Column{EddsaLocalDataColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "vaults_paillier_sks_vault",
				Columns:    []*schema.Column{VaultsColumns[9]},
				RefColumns: []*schema.Column{PaillierSksColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		EcdsaPubsTable,
		EcdsaLocalDataTable,
		EddsaLocalDataTable,
		PaillierSksTable,
		VaultsTable,
	}
)

func init() {
	EcdsaPubsTable.ForeignKeys[0].RefTable = VaultsTable
	VaultsTable.ForeignKeys[0].RefTable = EcdsaLocalDataTable
	VaultsTable.ForeignKeys[1].RefTable = EddsaLocalDataTable
	VaultsTable.ForeignKeys[2].RefTable = PaillierSksTable
}
